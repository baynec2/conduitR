% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_annotation_to_qf.R
\name{add_annotation_to_qf}
\alias{add_annotation_to_qf}
\title{Add Annotations to a QFeatures Object
This function adds annotation terms (e.g., GO, Pfam, InterPro) to a QFeatures
object.It extracts terms from a UniProt annotation file, stores them as a
list-column in the protein assay, and creates an adjacency matrix for
aggregation while keeping assay links intact.}
\usage{
add_annotation_to_qf(
  qf,
  uniprot_annotation,
  column_name = go,
  regex = "GO:\\\\d{7}"
)
}
\arguments{
\item{qf}{A QFeatures object containing a protein assay named "protein_groups".}

\item{uniprot_annotation}{A data frame or tibble containing protein annotations,
with a column for protein IDs and a column for the terms of interest.}

\item{column_name}{Unquoted name of the column in \code{uniprot_annotation} that
contains the annotation terms to extract.}

\item{regex}{A regular expression pattern used to extract annotation terms into a list.
For example: \code{xref_pfam = "PF\\d{5}"}, \code{xref_interpro = "IPR\\d{6}"}.}
}
\value{
A QFeatures object with:
\itemize{
\item A new list-column in the protein assay containing the extracted annotation terms.
\item An adjacency matrix stored in \code{adjacencyMatrix()} for aggregation.
}
}
\description{
Add Annotations to a QFeatures Object
This function adds annotation terms (e.g., GO, Pfam, InterPro) to a QFeatures
object.It extracts terms from a UniProt annotation file, stores them as a
list-column in the protein assay, and creates an adjacency matrix for
aggregation while keeping assay links intact.
}
\examples{
\dontrun{
# Add GO annotations
qf <- add_annotation_to_qf(
  qf,
  uniprot_annotation = uniprot_df,
  column_name = go,
  regex = "GO:\\\\d{7}"
)

# Add Pfam annotations
qf <- add_annotation_to_qf(
  qf,
  uniprot_annotation = uniprot_df,
  column_name = xref_pfam,
  regex = "PF\\\\d{5}"
)
}
}
