% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_log_imputed_norm_assays.R
\name{add_log_imputed_norm_assays}
\alias{add_log_imputed_norm_assays}
\title{Add Log-Transformed, Imputed, and Normalized Assays}
\usage{
add_log_imputed_norm_assays(
  qf,
  base = 2,
  impute_method = "min",
  norm_method = "none"
)
}
\arguments{
\item{qf}{A QFeatures object containing the data to transform}

\item{base}{Numeric value specifying the base for log transformation (default: 2)}

\item{impute_method}{Character string specifying the imputation method to use.
Must be one of the methods supported by QFeatures::impute() (default: "min")}

\item{norm_method}{Character string specifying the normalization method to use.
Must be one of the methods supported by QFeatures::normalize(), or "none"
to skip normalization (default: "none")}
}
\value{
A QFeatures object with additional assays:
\itemize{
\item {assay_name}_log{base}: Log-transformed data
\item {assay_name}_log{base}_imputed: Log-transformed and imputed data
\item {assay_name}_log{base}\emph{imputed_norm}{norm_method}: Normalized data
(only if norm_method is not "none")
}
}
\description{
Performs a series of data transformations on all assays in a QFeatures object:
\enumerate{
\item Replaces zeros with NA values
\item Applies log transformation with a pseudocount
\item Imputes missing values
\item Optionally normalizes the data
Each step creates a new assay in the QFeatures object.
}
}
\examples{
# Basic usage with default settings:
# qf_transformed <- add_log_imputed_norm_assays(qfeatures_obj)

# Using log10 transformation and min imputation:
# qf_transformed <- add_log_imputed_norm_assays(qfeatures_obj, base = 10)

# With normalization:
# qf_transformed <- add_log_imputed_norm_assays(qfeatures_obj,
#                                             norm_method = "center.scale")

# The transformed assays can be used with plotting functions:
# plot_density(qf_transformed, "protein", color = "group")
}
