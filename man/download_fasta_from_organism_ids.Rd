% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download_fasta_from_organism_ids.R
\name{download_fasta_from_organism_ids}
\alias{download_fasta_from_organism_ids}
\title{Download and Combine FASTA Files from UniProt Organism IDs}
\usage{
download_fasta_from_organism_ids(
  organism_ids,
  parallel = FALSE,
  destination_fp = paste0(getwd(), "/", Sys.Date(), ".fasta")
)
}
\arguments{
\item{organism_ids}{A numeric vector of NCBI taxonomy IDs (e.g., 9606 for human,
562 for E. coli). These IDs are used to identify organisms in UniProt.}

\item{parallel}{Logical indicating whether to use parallel processing (default: FALSE).
When TRUE, uses all available CPU cores minus one for downloading FASTA files.}

\item{destination_fp}{Character string specifying the path where the combined
FASTA file should be saved (default: creates a file named with the current date
in the working directory).}
}
\value{
A combined FASTA file containing protein sequences from all specified
organisms. The file includes:
\itemize{
\item Protein sequences from reference proteomes when available
\item Alternative proteomes for organisms without reference proteomes
\item Standard UniProt FASTA headers with protein and organism information
}
The function also provides progress messages about:
\itemize{
\item File deletion if a file exists at the destination
\item Proteome ID retrieval status
\item FASTA file download progress
\item File concatenation status
}
}
\description{
Downloads proteome FASTA files from UniProt for a list of organism IDs and combines
them into a single FASTA database. This function is particularly useful for creating
custom protein sequence databases for metaproteomics analysis. It automatically
selects reference proteomes when available and handles parallel processing for
efficient downloads.
}
\note{
This function:
\itemize{
\item Automatically removes duplicate organism IDs
\item Prioritizes reference proteomes when available
\item Creates a temporary directory for intermediate files
\item Handles API rate limits and connection errors
\item Cleans up temporary files after completion
}

For large numbers of organisms or when downloading frequently, consider:
\itemize{
\item Using parallel processing for faster downloads
\item Specifying a custom destination path
\item Monitoring available disk space
}
}
\examples{
# Download human and E. coli proteomes:
# download_fasta_from_organism_ids(c(9606, 562))

# Download with custom file path and parallel processing:
# download_fasta_from_organism_ids(
#   organism_ids = c(9606, 562, 10090),  # Human, E. coli, Mouse
#   parallel = TRUE,
#   destination_fp = "custom_database.fasta"
# )

# Use the resulting FASTA file with other functions:
# extract_fasta_info("database.fasta")
# prepare_taxonomy_matricies("taxonomy.tsv", "peptides.tsv", "database.fasta")

}
\seealso{
\itemize{
\item \code{\link[get_proteome_ids_from_organism_ids]{get_proteome_ids_from_organism_ids}}
for retrieving proteome IDs
\item \code{\link[get_fasta_file]{get_fasta_file}} for downloading individual
FASTA files
\item \code{\link[extract_fasta_info]{extract_fasta_info}} for parsing the
resulting FASTA file
}
}
