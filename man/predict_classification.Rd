% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_classification.R
\name{predict_classification}
\alias{predict_classification}
\title{Classification Model Prediction with Optional Tuning}
\usage{
predict_classification(
  qf,
  assay_name,
  outcome,
  train_percent = 70,
  model_type = "lasso_regression",
  v = 5,
  grid_size = 20
)
}
\arguments{
\item{qf}{A \code{QFeatures} object.}

\item{assay_name}{Name of the assay within \code{qf} to use.}

\item{outcome}{Column name of the classification outcome variable.}

\item{train_percent}{Percentage of data to use for training. Default is 70.}

\item{model_type}{One of \code{"lasso_regression"}, \code{"random_forest"}, or \code{"xgboost"}.}

\item{v}{Number of folds for cross-validation. Default is 5. If set to 1, tuning is skipped.}

\item{grid_size}{Number of tuning grid points. Default is 20.}
}
\value{
A list with fitted model, test and training predictions, confusion matrix, and variable importance.
}
\description{
Fits a classification model using lasso regression, random forest, or XGBoost
on a \code{QFeatures} object to a specified outcome variable in colData.
Optionally performs hyperparameter tuning using cross-validation.
}
\examples{
# predict_classification(qf, "myassay", "Group", model_type = "random_forest")
}
